{
  "version": 3,
  "sources": ["../../codemirror/mode/ruby/ruby.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAGA,KAAC,SAAS,KAAK;AACb,UAAI,OAAO,WAAW,YAAY,OAAO,UAAU;AACjD,YAAI,oBAA+B;AAAA,eAC5B,OAAO,UAAU,cAAc,OAAO;AAC7C,eAAO,CAAC,sBAAsB,GAAG,GAAG;AAAA;AAEpC,YAAI,UAAU;AAAA,IAClB,GAAG,SAASA,aAAY;AACxB;AAEA,eAAS,QAAQ,OAAO;AACtB,YAAI,IAAI,CAAC;AACT,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,EAAE;AAAG,YAAE,MAAM,CAAC,CAAC,IAAI;AAC5D,eAAO;AAAA,MACT;AAEA,UAAI,cAAc;AAAA,QAChB;AAAA,QAAS;AAAA,QAAO;AAAA,QAAS;AAAA,QAAS;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAS;AAAA,QAAO;AAAA,QAAY;AAAA,QAAM;AAAA,QACrF;AAAA,QAAS;AAAA,QAAO;AAAA,QAAO;AAAA,QAAU;AAAA,QAAS;AAAA,QAAO;AAAA,QAAM;AAAA,QAAM;AAAA,QAAU;AAAA,QAAQ;AAAA,QAAO;AAAA,QACtF;AAAA,QAAQ;AAAA,QAAU;AAAA,QAAS;AAAA,QAAU;AAAA,QAAQ;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAS;AAAA,QAC/E;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAS;AAAA,QAAS;AAAA,QAAO;AAAA,QAAS;AAAA,QAAS;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAQ;AAAA,QACrF;AAAA,QAAU;AAAA,QAAU;AAAA,QAAQ;AAAA,QAAU;AAAA,QAAa;AAAA,QAAW;AAAA,QAAW;AAAA,QACzE;AAAA,QAAoB;AAAA,QAAU;AAAA,QAAY;AAAA,QAAW;AAAA,QAAY;AAAA,QAAY;AAAA,MAC/E,GAAG,WAAW,QAAQ,WAAW;AAEjC,UAAI,cAAc,QAAQ;AAAA,QAAC;AAAA,QAAO;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAO;AAAA,QAAS;AAAA,QAAS;AAAA,QACjD;AAAA,QAAS;AAAA,QAAQ;AAAA,QAAQ;AAAA,MAAO,CAAC;AAC5D,UAAI,cAAc,QAAQ,CAAC,OAAO,OAAO,CAAC;AAC1C,UAAI,UAAU,EAAC,KAAK,KAAK,KAAK,KAAK,KAAK,IAAG;AAC3C,UAAI,UAAU,EAAC,KAAK,KAAK,KAAK,KAAK,KAAK,IAAG;AAE3C,MAAAA,YAAW,WAAW,QAAQ,SAAS,QAAQ;AAC7C,YAAI;AAEJ,iBAAS,MAAM,QAAQ,QAAQ,OAAO;AACpC,gBAAM,SAAS,KAAK,MAAM;AAC1B,iBAAO,OAAO,QAAQ,KAAK;AAAA,QAC7B;AAEA,iBAAS,UAAU,QAAQ,OAAO;AAChC,cAAI,OAAO,IAAI,KAAK,OAAO,MAAM,QAAQ,KAAK,OAAO,IAAI,GAAG;AAC1D,kBAAM,SAAS,KAAK,gBAAgB;AACpC,mBAAO;AAAA,UACT;AACA,cAAI,OAAO,SAAS;AAAG,mBAAO;AAC9B,cAAI,KAAK,OAAO,KAAK,GAAG;AACxB,cAAI,MAAM,OAAO,MAAM,OAAO,MAAM,KAAK;AACvC,mBAAO,MAAM,WAAW,IAAI,UAAU,MAAM,OAAO,MAAM,GAAG,GAAG,QAAQ,KAAK;AAAA,UAC9E,WAAW,MAAM,KAAK;AACpB,gBAAI,YAAY,MAAM;AACpB,qBAAO,MAAM,WAAW,IAAI,YAAY,IAAI,GAAG,QAAQ,KAAK;AAAA;AAE5D,qBAAO;AAAA,UACX,WAAW,MAAM,KAAK;AACpB,gBAAI,QAAQ,UAAU,QAAQ;AAC9B,gBAAI,OAAO,IAAI,GAAG;AAAG,sBAAQ;AAAA,qBACpB,OAAO,IAAI,MAAM;AAAG,sBAAQ;AAAA,qBAC5B,OAAO,IAAI,KAAK;AAAG,sBAAQ;AAAA,qBAC3B,OAAO,IAAI,OAAO,GAAG;AAAE,sBAAQ;AAAU,sBAAQ;AAAA,YAAO;AACjE,gBAAI,QAAQ,OAAO,IAAI,UAAU;AACjC,gBAAI,CAAC;AAAO,qBAAO;AACnB,gBAAI,QAAQ,qBAAqB,KAAK;AAAG,sBAAQ,QAAQ,KAAK;AAC9D,mBAAO,MAAM,WAAW,OAAO,OAAO,OAAO,IAAI,GAAG,QAAQ,KAAK;AAAA,UACnE,WAAW,MAAM,KAAK;AACpB,mBAAO,UAAU;AACjB,mBAAO;AAAA,UACT,WAAW,MAAM,QAAQ,IAAI,OAAO,MAAM,kDAAkD,IAAI;AAC9F,mBAAO,MAAM,YAAY,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,KAAK;AAAA,UACrD,WAAW,MAAM,KAAK;AACpB,gBAAI,OAAO,IAAI,GAAG;AAAG,qBAAO,SAAS,YAAY;AAAA,qBACxC,OAAO,IAAI,GAAG;AAAG,qBAAO,SAAS,MAAM;AAAA;AAC3C,qBAAO,SAAS,OAAO;AAC5B,mBAAO;AAAA,UACT,WAAW,KAAK,KAAK,EAAE,GAAG;AACxB,mBAAO,MAAM,2CAA2C;AACxD,mBAAO;AAAA,UACT,WAAW,MAAM,KAAK;AACpB,mBAAO,OAAO,MAAM,UAAU,GAAG;AAAA,YAAC;AAClC,gBAAI,OAAO,IAAI,IAAI;AAAG,qBAAO,SAAS,IAAI;AAAA;AACrC,qBAAO,KAAK;AACjB,mBAAO;AAAA,UACT,WAAW,MAAM,KAAK;AACpB,gBAAI,OAAO,IAAI,GAAG;AAAG,qBAAO,MAAM,WAAW,KAAK,QAAQ,KAAK,GAAG,QAAQ,KAAK;AAC/E,gBAAI,OAAO,IAAI,GAAG;AAAG,qBAAO,MAAM,WAAW,KAAK,QAAQ,IAAI,GAAG,QAAQ,KAAK;AAG9E,gBAAI,OAAO,IAAI,QAAQ,GAAG;AACxB,qBAAO,IAAI,QAAQ;AACnB,qBAAO;AAAA,YACT;AAGA,gBAAI,OAAO,IAAI,oBAAoB,GAAG;AACpC,qBAAO;AAAA,YACT;AAGA,gBAAI,OAAO,IAAI,wBAAwB,GAAG;AACxC,qBAAO,SAAS,kBAAkB;AAElC,qBAAO,IAAI,UAAU;AACrB,qBAAO;AAAA,YACT;AACA,mBAAO;AAAA,UACT,WAAW,MAAM,OAAO,OAAO,MAAM,yBAAyB,GAAG;AAC/D,mBAAO,IAAI,GAAG;AACd,mBAAO,SAAS,iBAAiB;AACjC,mBAAO;AAAA,UACT,WAAW,MAAM,KAAK;AACpB,gBAAI,OAAO,IAAI,WAAW,GAAG;AAC3B,qBAAO,SAAS,MAAM;AAAA,YACxB,WAAW,OAAO,IAAI,IAAI,GAAG;AAC3B,qBAAO,IAAI,IAAI;AAAA,YACjB,OAAO;AACL,qBAAO,KAAK;AAAA,YACd;AACA,mBAAO;AAAA,UACT,WAAW,uBAAuB,KAAK,EAAE,GAAG;AAC1C,mBAAO,SAAS,iBAAiB;AACjC,mBAAO,IAAI,QAAQ;AACnB,gBAAI,OAAO,IAAI,GAAG;AAAG,qBAAO;AAC5B,mBAAO;AAAA,UACT,WAAW,MAAM,QAAQ,MAAM,WAAW,MAAM,WAAW,OAAO,MAAM,WAAW,OAAO;AACxF,sBAAU;AACV,mBAAO;AAAA,UACT,WAAW,kBAAkB,KAAK,EAAE,GAAG;AACrC,sBAAU;AACV,mBAAO;AAAA,UACT,WAAW,MAAM,OAAO,OAAO,IAAI,GAAG,GAAG;AACvC,mBAAO;AAAA,UACT,WAAW,qBAAqB,KAAK,EAAE,GAAG;AACxC,gBAAI,OAAO,OAAO,SAAS,oBAAoB;AAC/C,gBAAI,MAAM,OAAO,CAAC;AAAM,wBAAU;AAClC,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,iBAAS,YAAY,QAAQ;AAC3B,cAAI,QAAQ,OAAO,KAAK,QAAQ,GAAG,MAAM,QAAQ,OAAO,UAAU;AAClE,kBAAQ,OAAO,OAAO,KAAK,MAAM,MAAM;AACrC,gBAAI,CAAC,SAAS;AACZ,kBAAI,MAAM,QAAQ,IAAI,IAAI,IAAI;AAC5B;AAAA,cACF,WAAW,MAAM,QAAQ,IAAI,IAAI,IAAI;AACnC;AACA,oBAAI,QAAQ;AAAG;AAAA,cACjB,WAAW,QAAQ,OAAO,SAAS,GAAG;AACpC,wBAAQ;AACR;AAAA,cACF;AACA,wBAAU,QAAQ;AAAA,YACpB,OAAO;AACL,wBAAU;AAAA,YACZ;AAAA,UACF;AACA,iBAAO,OAAO,OAAO,MAAM,KAAK;AAChC,iBAAO;AAAA,QACT;AAEA,iBAAS,oBAAoB,OAAO;AAClC,cAAI,CAAC;AAAO,oBAAQ;AACpB,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,OAAO,KAAK,KAAK,KAAK;AACxB,kBAAI,SAAS,GAAG;AACd,sBAAM,SAAS,IAAI;AACnB,uBAAO,MAAM,SAAS,MAAM,SAAS,SAAO,CAAC,EAAE,QAAQ,KAAK;AAAA,cAC9D,OAAO;AACL,sBAAM,SAAS,MAAM,SAAS,SAAS,CAAC,IAAI,oBAAoB,QAAQ,CAAC;AAAA,cAC3E;AAAA,YACF,WAAW,OAAO,KAAK,KAAK,KAAK;AAC/B,oBAAM,SAAS,MAAM,SAAS,SAAS,CAAC,IAAI,oBAAoB,QAAQ,CAAC;AAAA,YAC3E;AACA,mBAAO,UAAU,QAAQ,KAAK;AAAA,UAChC;AAAA,QACF;AACA,iBAAS,gBAAgB;AACvB,cAAI,gBAAgB;AACpB,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,eAAe;AACjB,oBAAM,SAAS,IAAI;AACnB,qBAAO,MAAM,SAAS,MAAM,SAAS,SAAO,CAAC,EAAE,QAAQ,KAAK;AAAA,YAC9D;AACA,4BAAgB;AAChB,mBAAO,UAAU,QAAQ,KAAK;AAAA,UAChC;AAAA,QACF;AACA,iBAAS,WAAW,OAAO,OAAO,OAAO,WAAW;AAClD,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,UAAU,OAAO;AAErB,gBAAI,MAAM,QAAQ,SAAS,sBAAsB;AAC/C,oBAAM,UAAU,MAAM,QAAQ;AAC9B,qBAAO,IAAI,GAAG;AAAA,YAChB;AAEA,oBAAQ,KAAK,OAAO,KAAK,MAAM,MAAM;AACnC,kBAAI,MAAM,UAAU,aAAa,CAAC,UAAU;AAC1C,sBAAM,SAAS,IAAI;AACnB;AAAA,cACF;AACA,kBAAI,SAAS,MAAM,OAAO,CAAC,SAAS;AAClC,oBAAI,OAAO,IAAI,GAAG,GAAG;AACnB,sBAAI,SAAS,KAAK;AAChB,0BAAM,UAAU,EAAC,MAAM,MAAM,SAAS,MAAM,qBAAoB;AAAA,kBAClE;AACA,wBAAM,SAAS,KAAK,oBAAoB,CAAC;AACzC;AAAA,gBACF,WAAW,QAAQ,KAAK,OAAO,KAAK,CAAC,GAAG;AACtC,wBAAM,SAAS,KAAK,cAAc,CAAC;AACnC;AAAA,gBACF;AAAA,cACF;AACA,wBAAU,CAAC,WAAW,MAAM;AAAA,YAC9B;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AACA,iBAAS,YAAY,QAAQ,WAAW;AACtC,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI;AAAW,qBAAO,SAAS;AAC/B,gBAAI,OAAO,MAAM,MAAM;AAAG,oBAAM,SAAS,IAAI;AAAA;AACxC,qBAAO,UAAU;AACtB,mBAAO;AAAA,UACT;AAAA,QACF;AACA,iBAAS,iBAAiB,QAAQ,OAAO;AACvC,cAAI,OAAO,IAAI,KAAK,OAAO,MAAM,MAAM,KAAK,OAAO,IAAI;AACrD,kBAAM,SAAS,IAAI;AACrB,iBAAO,UAAU;AACjB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,UACL,YAAY,WAAW;AACrB,mBAAO;AAAA,cAAC,UAAU,CAAC,SAAS;AAAA,cACpB,UAAU;AAAA,cACV,SAAS,EAAC,MAAM,OAAO,UAAU,CAAC,OAAO,WAAU;AAAA,cACnD,eAAe;AAAA,cACf,SAAS;AAAA,cACT,SAAS;AAAA,YAAK;AAAA,UACxB;AAAA,UAEA,OAAO,SAAS,QAAQ,OAAO;AAC7B,sBAAU;AACV,gBAAI,OAAO,IAAI;AAAG,oBAAM,WAAW,OAAO,YAAY;AACtD,gBAAI,QAAQ,MAAM,SAAS,MAAM,SAAS,SAAO,CAAC,EAAE,QAAQ,KAAK,GAAG;AACpE,gBAAI,UAAU;AACd,gBAAI,SAAS,SAAS;AACpB,kBAAI,OAAO,OAAO,QAAQ;AAC1B,sBAAQ,MAAM,WAAW,MAAM,aAC3B,SAAS,qBAAqB,OAAO,QAAQ,CAAC,IAAI,YAClD,SAAS,KAAK,IAAI,IAAI,QACrB,MAAM,WAAW,SAAS,MAAM,WAAW,WAAW,MAAM,UAAW,QACxE;AACJ,kBAAI,SAAS,WAAW;AACtB,0BAAU;AACV,oBAAI,YAAY,qBAAqB,IAAI;AAAG,2BAAS;AAAA,yBAC5C,YAAY,qBAAqB,IAAI;AAAG,2BAAS;AAAA,0BAChD,QAAQ,QAAQ,QAAQ,aAAa,OAAO,OAAO,KAAK,OAAO,YAAY;AACnF,2BAAS;AAAA,yBACF,QAAQ,QAAQ,MAAM,QAAQ,WAAW,MAAM;AACtD,2BAAS;AAAA,cACb;AAAA,YACF;AACA,gBAAI,WAAY,SAAS,SAAS;AAAY,oBAAM,UAAU;AAC9D,gBAAI,WAAW;AAAK,oBAAM,UAAU,CAAC,MAAM;AAE3C,gBAAI,UAAU,YAAY,WAAW,KAAK,OAAO;AAC/C,oBAAM,UAAU,EAAC,MAAM,MAAM,SAAS,MAAM,WAAW,OAAO,UAAU,MAAM,SAAQ;AAAA,sBAC9E,UAAU,YAAY,WAAW,KAAK,OAAO,MAAM,MAAM,QAAQ;AACzE,oBAAM,UAAU,MAAM,QAAQ;AAEhC,gBAAI,OAAO,IAAI;AACb,oBAAM,gBAAiB,WAAW,QAAQ,SAAS;AACrD,mBAAO;AAAA,UACT;AAAA,UAEA,QAAQ,SAAS,OAAO,WAAW;AACjC,gBAAI,MAAM,SAAS,MAAM,SAAS,SAAO,CAAC,KAAK;AAAW,qBAAOA,YAAW;AAC5E,gBAAI,YAAY,aAAa,UAAU,OAAO,CAAC;AAC/C,gBAAI,KAAK,MAAM;AACf,gBAAI,SAAS,GAAG,QAAQ,QAAQ,SAAS,KACvC,GAAG,QAAQ,aAAa,0CAA0C,KAAK,SAAS;AAClF,mBAAO,GAAG,YAAY,SAAS,IAAI,OAAO,eACvC,MAAM,gBAAgB,OAAO,aAAa;AAAA,UAC/C;AAAA,UAEA,eAAe;AAAA,UACf,aAAa;AAAA,UACb,MAAM;AAAA,QACR;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,eAAe,MAAM;AAE3C,MAAAA,YAAW,eAAe,aAAa,QAAQ,WAAW;AAAA,IAE1D,CAAC;AAAA;AAAA;",
  "names": ["CodeMirror"]
}
